import axios, { AxiosResponse } from "axios";
import dedent from "dedent-js";
import envVariables from "../common/envVariables";
import { OpenDataWeatherResponse, Params } from "./forecast.service.types";
import { getKeyValue } from "./storage.service";
import { STORAGE_KEYS } from "./storage.service.types";

const WEATHER_ICONS: Record<string, string> = {
  "01": "‚òÄÔ∏è",
  "02": "üå§Ô∏è",
  "03": "‚òÅÔ∏è",
  "04": "‚òÅÔ∏è",
  "09": "üåßÔ∏è",
  "10": "üå¶Ô∏è",
  "11": "üå©Ô∏è",
  "13": "‚ùÑÔ∏è",
  "50": "üå´Ô∏è",
};

export const getIcon = (iconCode: string): string => {
  const iconCodeNumber = iconCode.slice(0, -1);
  return WEATHER_ICONS[iconCodeNumber] ?? "";
};

const fetchData = (
  token: string,
  city: string
): Promise<AxiosResponse<OpenDataWeatherResponse>> => {
  return axios.get(envVariables?.FORECAST_API_URL || "", {
    params: {
      q: city,
      appid: String(token),
      lang: "ru",
      units: "metric",
    },
  });
};

export const getForecast = async (params: Params): Promise<string | Error> => {
  try {
    const city = params.city || (await getKeyValue(STORAGE_KEYS.CITY));
    if (!city) {
      throw new Error("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–æ—Ä–æ–¥");
    }

    const token = params.token || (await getKeyValue(STORAGE_KEYS.TOKEN));

    if (!token) {
      throw new Error("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å—É");
    }

    const { data } = await fetchData(String(token), String(city));
    return printWeather(data);
  } catch (err) {
    if (err instanceof Error) {
      throw new Error(err.message);
    }
    throw new Error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
  }
};

const printWeather = (data: OpenDataWeatherResponse): string => {
  return dedent`–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${data.name}
    ${getIcon(data.weather[0].icon)}  ${data.weather[0].description}
    –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${data.main.temp} (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${data.main.feels_like})
    –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${data.main.humidity}%
    –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${data.wind.speed}`;
};
